#!/bin/bash -x


# chkconfig: - 95 5
# description: The Apache HTTP Server is an efficient and extensible  \
#	       server implementing the current HTTP standards.
# processname: httpd
# config: /etc/grafana/conf/grafana.yml
# pidfile: /var/run/grafana.pid
#
### BEGIN INIT INFO
# Provides: grafana
# Required-Start: $local_fs $remote_fs $network $named
# Required-Stop: $local_fs $remote_fs $network
# Short-Description: start and stop Grafana4
# Description: The grafana is a dashboard for ElasticSearch 
### END INIT INFO



PATH=/sbin:/usr/sbin:/bin:/usr/bin:/usr/lib/grafana/bin
DESC="Grafana"
NAME=grafana
DAEMON=bin/grafana-server
DAEMON_ARGS=""
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME
LOG=/var/log/grafana/grafana.log
RETVAL=0
 
pid_file_exists() {
    [ -f "$PIDFILE" ]
}
 
do_start()      {
        
        if pid_file_exists
        then
                        echo "Grafana is already running"
                        return 1
        else
                        cd /usr/lib/grafana
                        sudo -u grafana $DAEMON $DAEMON_ARGS 1>"$LOG" 2>&1 &
                        PID=$!
                        echo $PID > "$PIDFILE"
           
                        if [ "$PID" > 0 ]
                        then
                                echo "Grafana started with pid $!"
                                return 0
                        else
                                echo "Grafana could not be started"
                                return 1
                        fi    
        fi
                
        
}
 
 
do_status() {
        if pid_file_exists
        then    
                PID=$(cat $PIDFILE)
                STATUS=$(ps ax | grep $PID | grep -v grep | awk '{print $1}')
                
                if [ "$STATUS" == "$PID" ]
                then
                                echo "Grafana is running on proccess $PID"
                                return 0
                else
                                echo "Grafana is NOT running"
                                #rm $PIDFILE
                                return 1
                fi
        else
                echo "Grafana is NOT running"
                return 3
        fi
}
 
do_stop() {
        if pid_file_exists
        then    
                PID=$(cat $PIDFILE)
                STATUS=$(ps ax | grep $PID | grep -v grep | awk '{print $1}')
                
                if [ "$STATUS" == "$PID" ]
                then
                                echo "Killing Grafana...."
                                KILL=$(kill -15 $PID)
                                rm $PIDFILE
                                sleep 1
                                echo -e "\tGrafana (PID:$PID) killed"
                                return 0
                                
                else
                                echo "Grafana is NOT running"
                                rm $PIDFILE
                                return 1
                fi
        else
                echo "Grafana is NOT running"
                 return 0
        fi
}
 
 
case "$1" in
  start)
        do_start
        RETVAL=$?
        ;;
  stop)
        do_stop
        RETVAL=$?
        ;;
  status)
        do_status
        RETVAL=$?
        ;;
  restart)
        do_stop
        do_start
        RETVAL=$?
        ;;
  *)
        echo "Usage: $SCRIPTNAME {start|stop|status|restart}" >&2
        exit 2
        ;;
esac
 
exit $RETVAL
